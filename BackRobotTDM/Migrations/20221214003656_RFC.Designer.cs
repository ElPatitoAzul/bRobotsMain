// <auto-generated />
using System;
using BackRobotTDM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackRobotTDM.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20221214003656_RFC")]
    partial class RFC
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Modelos.Corte.ActasRegModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("corte")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan?>("createdtime")
                        .HasColumnType("interval");

                    b.Property<string>("dataset")
                        .HasColumnType("text");

                    b.Property<string>("document")
                        .HasColumnType("text");

                    b.Property<bool?>("hidden")
                        .HasColumnType("boolean");

                    b.Property<int?>("id2")
                        .HasColumnType("integer");

                    b.Property<int?>("idcreated")
                        .HasColumnType("integer");

                    b.Property<int?>("idhidden")
                        .HasColumnType("integer");

                    b.Property<int?>("idtranspose")
                        .HasColumnType("integer");

                    b.Property<int?>("level0")
                        .HasColumnType("integer");

                    b.Property<int?>("level1")
                        .HasColumnType("integer");

                    b.Property<int?>("level2")
                        .HasColumnType("integer");

                    b.Property<int?>("level3")
                        .HasColumnType("integer");

                    b.Property<int?>("level4")
                        .HasColumnType("integer");

                    b.Property<int?>("level5")
                        .HasColumnType("integer");

                    b.Property<string>("namefile")
                        .HasColumnType("text");

                    b.Property<string>("nameinside")
                        .HasColumnType("text");

                    b.Property<double?>("price0")
                        .HasColumnType("double precision");

                    b.Property<double?>("price1")
                        .HasColumnType("double precision");

                    b.Property<double?>("price2")
                        .HasColumnType("double precision");

                    b.Property<double?>("price3")
                        .HasColumnType("double precision");

                    b.Property<double?>("price4")
                        .HasColumnType("double precision");

                    b.Property<double?>("price5")
                        .HasColumnType("double precision");

                    b.Property<bool?>("send")
                        .HasColumnType("boolean");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("actas_reg");
                });

            modelBuilder.Entity("Modelos.Logs.PeticionesActasLogModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResultStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RobotStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PeticionesActasLog");
                });

            modelBuilder.Entity("Modelos.Robots.RobotModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessToken")
                        .HasColumnType("text");

                    b.Property<int?>("Current")
                        .HasColumnType("integer");

                    b.Property<string>("For")
                        .HasColumnType("text");

                    b.Property<int?>("Limit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("System")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RobotsUsage");
                });

            modelBuilder.Entity("Modelos.SAT.PeticionesRFCModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apellidos")
                        .HasColumnType("text");

                    b.Property<string>("CURP")
                        .HasColumnType("text");

                    b.Property<string>("Ciudad")
                        .HasColumnType("text");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deadline")
                        .HasColumnType("text");

                    b.Property<bool>("Downloaded")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<string>("Nombres")
                        .HasColumnType("text");

                    b.Property<string>("RFC")
                        .HasColumnType("text");

                    b.Property<int?>("RegId")
                        .HasColumnType("integer");

                    b.Property<string>("RobotTaken")
                        .HasColumnType("text");

                    b.Property<string>("Search")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TransposeId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("UserIp")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PeticionesRFC");
                });

            modelBuilder.Entity("Modelos.SID.PeticionActaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apellidos")
                        .HasColumnType("text");

                    b.Property<string>("CURP")
                        .HasColumnType("text");

                    b.Property<string>("Cadena")
                        .HasColumnType("text");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deadline")
                        .HasColumnType("text");

                    b.Property<bool>("Downloaded")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("FechaNac")
                        .HasColumnType("text");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<string>("Nombres")
                        .HasColumnType("text");

                    b.Property<int>("Preferences")
                        .HasColumnType("integer");

                    b.Property<int?>("RegId")
                        .HasColumnType("integer");

                    b.Property<string>("RobotTaken")
                        .HasColumnType("text");

                    b.Property<string>("Search")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TransposeId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("UserIp")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PeticionesActas");
                });
#pragma warning restore 612, 618
        }
    }
}
